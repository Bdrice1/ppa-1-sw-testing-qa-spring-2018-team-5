#
# Retirement- Input user's current age, annual salary, percentage saved (employer matches 35% of
# savings). Input desired retirement savings goal. Output what age savings goal will be met. You can
# assume death at 100 years (therefore, indicate if the savings goal is not met).


def main():
    print("Welcome to the Retirement Savings Calculator")
    curr_age = int(input("How old are you currently? "))
    salary = int(input("What is your annual salary? "))
    saved = int(input("What percentage have you saved? "))
    desired = int(input("What is your desired retirement savings? "))
    curr_saved = per_saved(salary, saved)
    employer = employer_match(curr_saved)
    result = compute(curr_age, desired, curr_saved, employer)
    print(result)


def per_saved(salary,saved):
    return (salary*(saved/100))


def employer_match(curr_saved):
    return (curr_saved*(35/100))


def compute(curr_age, desired, curr_saved, employer):
    inc_age = curr_age
    while inc_age <= 100:
        if inc_age == 100:
            return ("Sorry, you missed your goal.")
        if curr_saved >= desired:
            return ("You will meet your savings goal at", inc_age)
        else:
            curr_saved += employer
            inc_age += 1


if __name__ == '__main__':

    main()